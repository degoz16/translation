// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`integration ## Start {#your-ideas}{% else %} end 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\">Start {#<x equiv-text=\\"your-ideas\\" id=\\"e1\\" x-type=\\"header_id\\" />}<x equiv-text=\\"{% else %}\\" id=\\"e2\\" x-type=\\"liquid_operator\\" /> end</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration ## Start {#your-ideas}{% else %} end 2`] = `"## %%%1%%%"`;

exports[`integration ## Start {#your-ideas}{% else %} end 3`] = `
Object {
  "document": "## Start {#your-ideas}{% else %} end",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "Start {#your-ideas}{% else %} end",
  },
}
`;

exports[`integration (a **18. B**). 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\">(a <g equiv-text=\\"**{{text}}**\\" id=\\"e1\\" ctype=\\"bold\\" x-type=\\"strong\\" x-begin=\\"**\\" x-end=\\"**\\">18. B</g>).</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration (a **18. B**). 2`] = `"%%%1%%%"`;

exports[`integration (a **18. B**). 3`] = `
Object {
  "document": "(a **18. B**).",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "(a **18. B**).",
  },
}
`;

exports[`integration \`{{ var }}\` — one. Two 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1_s-1\\">
                <source xml:space=\\"preserve\\"><x equiv-text=\\"\`{{ var }}\`\\" id=\\"e1\\" x-type=\\"code_inline\\" /> — one.</source>
            </trans-unit>
            <trans-unit id=\\"2_s-3\\">
                <source xml:space=\\"preserve\\">Two</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration \`{{ var }}\` — one. Two 2`] = `"%%%1_s-1%%% %%%2_s-3%%%"`;

exports[`integration \`{{ var }}\` — one. Two 3`] = `
Object {
  "document": "\`{{ var }}\` — one. Two",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1_s-1": "\`{{ var }}\` — one.",
    "2_s-3": "Two",
  },
}
`;

exports[`integration A ![](link) b. C. 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1_s-1\\">
                <source xml:space=\\"preserve\\">A <x equiv-text=\\"![](link)\\" id=\\"e1\\" x-type=\\"image\\" /> b.</source>
            </trans-unit>
            <trans-unit id=\\"2_s-3\\">
                <source xml:space=\\"preserve\\">C.</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration A ![](link) b. C. 2`] = `"%%%1_s-1%%% %%%2_s-3%%%"`;

exports[`integration A ![](link) b. C. 3`] = `
Object {
  "document": "A ![](link) b. C.",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1_s-1": "A ![](link) b.",
    "2_s-3": "C.",
  },
}
`;

exports[`integration A. B [{#T}](D). C. 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1_s-1\\">
                <source xml:space=\\"preserve\\">A. B <g equiv-text=\\"[{{text}}](D)\\" id=\\"e1\\" ctype=\\"link\\" x-type=\\"link\\" x-begin=\\"[\\" x-end=\\"](D)\\"><x equiv-text=\\"{#T}\\" id=\\"e2\\" x-type=\\"link_template\\" /></g>.</source>
            </trans-unit>
            <trans-unit id=\\"2_s-3\\">
                <source xml:space=\\"preserve\\">C.</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration A. B [{#T}](D). C. 2`] = `"%%%1_s-1%%% %%%2_s-3%%%"`;

exports[`integration A. B [{#T}](D). C. 3`] = `
Object {
  "document": "A. B [{#T}](D). C.",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1_s-1": "A. B [{#T}](D).",
    "2_s-3": "C.",
  },
}
`;

exports[`integration computes valid sentenses 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1_s-1\\">
                <source xml:space=\\"preserve\\">Записывает или удаляет элементы из таблиц.</source>
            </trans-unit>
            <trans-unit id=\\"2_s-3\\">
                <source xml:space=\\"preserve\\">Один вызов может записать до 16 Мб данных, что может включать до 25 запросов на размещение или удаление.</source>
            </trans-unit>
            <trans-unit id=\\"3_s-5\\">
                <source xml:space=\\"preserve\\">Каждый элемент может иметь размер до 400 Кб.</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration computes valid sentenses 2`] = `
"%%%1_s-1%%%
%%%2_s-3%%% %%%3_s-5%%%"
`;

exports[`integration computes valid sentenses 3`] = `
Object {
  "document": "Записывает или удаляет элементы из таблиц.
Один вызов может записать до 16 Мб данных, что может включать до 25 запросов на размещение или удаление. Каждый элемент может иметь размер до 400 Кб.",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1_s-1": "Записывает или удаляет элементы из таблиц.",
    "2_s-3": "Один вызов может записать до 16 Мб данных, что может включать до 25 запросов на размещение или удаление.",
    "3_s-5": "Каждый элемент может иметь размер до 400 Кб.",
  },
}
`;

exports[`integration handles autolinks 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\">A <g equiv-text=\\"&lt;{{text}}&gt;\\" id=\\"e1\\" ctype=\\"link\\" x-type=\\"link\\" x-begin=\\"&lt;\\" x-end=\\"&gt;\\">http://gitgrimbo.github.io/harviewer/master/</g></source>
            </trans-unit>
            <trans-unit id=\\"2\\">
                <source xml:space=\\"preserve\\">B <g equiv-text=\\"&lt;{{text}}&gt;\\" id=\\"e1\\" ctype=\\"link\\" x-type=\\"link\\" x-begin=\\"&lt;\\" x-end=\\"&gt;\\">https://toolbox.googleapps.com/apps/har_analyzer/?lang=ru</g></source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles autolinks 2`] = `
"* %%%1%%%
* %%%2%%%"
`;

exports[`integration handles autolinks 3`] = `
Object {
  "document": "* A <http://gitgrimbo.github.io/harviewer/master/>
* B <https://toolbox.googleapps.com/apps/har_analyzer/?lang=ru>",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "A <http://gitgrimbo.github.io/harviewer/master/>",
    "2": "B <https://toolbox.googleapps.com/apps/har_analyzer/?lang=ru>",
  },
}
`;

exports[`integration handles blockquotes 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles blockquotes 2`] = `
"> 1
> 2
>
> > 3
> > 4
>
> 5"
`;

exports[`integration handles code regexps with escape chars 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\">Поле</source>
            </trans-unit>
            <trans-unit id=\\"2\\">
                <source xml:space=\\"preserve\\">Описание</source>
            </trans-unit>
            <trans-unit id=\\"3\\">
                <source xml:space=\\"preserve\\">zone</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles code regexps with escape chars 2`] = `
"%%%1%%% | %%%2%%%
--- | ---
%%%3%%% |  \`\`[.]\\\\|[a-z0-9][-a-z0-9.]*\\\\.\`\`"
`;

exports[`integration handles code regexps with escape chars 3`] = `
Object {
  "document": "Поле | Описание
--- | ---
zone |  \`\`[.]\\\\|[a-z0-9][-a-z0-9.]*\\\\.\`\`",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "Поле",
    "2": "Описание",
    "3": "zone",
  },
}
`;

exports[`integration handles empty image in list 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1_s-1\\">
                <source xml:space=\\"preserve\\"><g equiv-text=\\"**{{text}}**\\" id=\\"e1\\" ctype=\\"bold\\" x-type=\\"strong\\" x-begin=\\"**\\" x-end=\\"**\\">A</g>.</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles empty image in list 2`] = `
"1. %%%1_s-1%%%
 ![](../_assets/stat-segment.png)"
`;

exports[`integration handles empty image in list 3`] = `
Object {
  "document": "1. **A**.
 ![](../_assets/stat-segment.png)",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1_s-1": "**A**.",
  },
}
`;

exports[`integration handles empty images 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles empty images 2`] = `
"- ![](./image1)
- ![](./image2)"
`;

exports[`integration handles empty link in list 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1_s-1\\">
                <source xml:space=\\"preserve\\"><g equiv-text=\\"**{{text}}**\\" id=\\"e1\\" ctype=\\"bold\\" x-type=\\"strong\\" x-begin=\\"**\\" x-end=\\"**\\">A</g>.</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles empty link in list 2`] = `
"1. %%%1_s-1%%%
 [](../empty/link)"
`;

exports[`integration handles empty link in list 3`] = `
Object {
  "document": "1. **A**.
 [](../empty/link)",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1_s-1": "**A**.",
  },
}
`;

exports[`integration handles empty links 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles empty links 2`] = `
"- [](./link1)
- [](./link2)"
`;

exports[`integration handles image with empty title at the end of segment 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1_s-1\\">
                <source xml:space=\\"preserve\\">A <x equiv-text=\\"![](./some/image.png)\\" id=\\"e1\\" x-type=\\"image\\" />.</source>
            </trans-unit>
            <trans-unit id=\\"2_s-3\\">
                <source xml:space=\\"preserve\\">B.</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles image with empty title at the end of segment 2`] = `"%%%1_s-1%%% %%%2_s-3%%%"`;

exports[`integration handles image with empty title at the end of segment 3`] = `
Object {
  "document": "A ![](./some/image.png). B.",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1_s-1": "A ![](./some/image.png).",
    "2_s-3": "B.",
  },
}
`;

exports[`integration handles image with variables in title 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\"><g equiv-text=\\"![{{text}})\\" id=\\"e1\\" ctype=\\"image\\" x-type=\\"image\\" x-begin=\\"![\\" x-end=\\")\\"><x equiv-text=\\"Image\\" id=\\"e2\\" x-type=\\"image_name\\" /><g equiv-text=\\"](index-mini.md &quot;{{text}}&quot;\\" id=\\"e3\\" x-type=\\"image_title\\" x-begin=\\"](index-mini.md &quot;\\" x-end=\\"&quot;\\">Title <x equiv-text=\\"{{product-name-short.station-mini-old}}\\" id=\\"e4\\" x-type=\\"liquid_variable\\" />. And what?</g></g></source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles image with variables in title 2`] = `"%%%1%%%"`;

exports[`integration handles image with variables in title 3`] = `
Object {
  "document": "![Image](index-mini.md \\"Title {{product-name-short.station-mini-old}}. And what?\\")",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "![Image](index-mini.md \\"Title {{product-name-short.station-mini-old}}. And what?\\")",
  },
}
`;

exports[`integration handles inline code 1 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\">Параметр</source>
            </trans-unit>
            <trans-unit id=\\"2\\">
                <source xml:space=\\"preserve\\">Описание</source>
            </trans-unit>
            <trans-unit id=\\"3\\">
                <source xml:space=\\"preserve\\">Произошла</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles inline code 1 2`] = `
"%%%1%%% | %%%2%%%
----- | -----
\`InternalServerError\` | %%%3%%%"
`;

exports[`integration handles inline code 1 3`] = `
Object {
  "document": "Параметр | Описание
----- | -----
\`InternalServerError\` | Произошла",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "Параметр",
    "2": "Описание",
    "3": "Произошла",
  },
}
`;

exports[`integration handles inline code 3 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\">Описание значений полей:</source>
            </trans-unit>
            <trans-unit id=\\"2\\">
                <source xml:space=\\"preserve\\"><g equiv-text=\\"**{{text}}**\\" id=\\"e1\\" ctype=\\"bold\\" x-type=\\"strong\\" x-begin=\\"**\\" x-end=\\"**\\">Название поля</g></source>
            </trans-unit>
            <trans-unit id=\\"3\\">
                <source xml:space=\\"preserve\\"><g equiv-text=\\"**{{text}}**\\" id=\\"e1\\" ctype=\\"bold\\" x-type=\\"strong\\" x-begin=\\"**\\" x-end=\\"**\\">Тип</g></source>
            </trans-unit>
            <trans-unit id=\\"4\\">
                <source xml:space=\\"preserve\\"><g equiv-text=\\"**{{text}}**\\" id=\\"e1\\" ctype=\\"bold\\" x-type=\\"strong\\" x-begin=\\"**\\" x-end=\\"**\\">Описание</g></source>
            </trans-unit>
            <trans-unit id=\\"5\\">
                <source xml:space=\\"preserve\\">column_name</source>
            </trans-unit>
            <trans-unit id=\\"6\\">
                <source xml:space=\\"preserve\\">Имя колонки для TTL</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles inline code 3 2`] = `
"%%%1%%%
| %%%2%%% | %%%3%%% | %%%4%%% |
| --- | --- | --- |
|%%%5%%%|\`string\`<br>\`required\`|%%%6%%%|"
`;

exports[`integration handles inline code 3 3`] = `
Object {
  "document": "Описание значений полей:
| **Название поля** | **Тип** | **Описание** |
| --- | --- | --- |
|column_name|\`string\`<br>\`required\`|Имя колонки для TTL|",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "Описание значений полей:",
    "2": "**Название поля**",
    "3": "**Тип**",
    "4": "**Описание**",
    "5": "column_name",
    "6": "Имя колонки для TTL",
  },
}
`;

exports[`integration handles inline includes 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\">:   <x equiv-text=\\"{% include [test](./test.md) %}\\" id=\\"e1\\" x-type=\\"liquid_operator\\" /><x equiv-text=\\"\\" id=\\"t2--1\\" ctype=\\"lb\\" />OK</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles inline includes 2`] = `"%%%1%%%"`;

exports[`integration handles inline includes 3`] = `
Object {
  "document": ":   {% include [test](./test.md) %}
OK",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": ":   {% include [test](./test.md) %}
OK",
  },
}
`;

exports[`integration handles link with empty title at the end of segment 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1_s-1\\">
                <source xml:space=\\"preserve\\">A <g equiv-text=\\"[{{text}}](./some/link)\\" id=\\"e1\\" ctype=\\"link\\" x-type=\\"link\\" x-begin=\\"[\\" x-end=\\"](./some/link)\\" />.</source>
            </trans-unit>
            <trans-unit id=\\"2_s-3\\">
                <source xml:space=\\"preserve\\">B.</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles link with empty title at the end of segment 2`] = `"%%%1_s-1%%% %%%2_s-3%%%"`;

exports[`integration handles link with empty title at the end of segment 3`] = `
Object {
  "document": "A [](./some/link). B.",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1_s-1": "A [](./some/link).",
    "2_s-3": "B.",
  },
}
`;

exports[`integration handles link with image with variables in title 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\"><g equiv-text=\\"[{{text}})\\" id=\\"e1\\" ctype=\\"link\\" x-type=\\"link\\" x-begin=\\"[\\" x-end=\\")\\">![Image](index-mini.md &quot;Title <x equiv-text=\\"{{product-name-short.station-mini-old}}\\" id=\\"e2\\" x-type=\\"liquid_variable\\" />. And what?&quot; x100)<g equiv-text=\\"](index-mini.md &quot;{{text}}&quot;\\" id=\\"e3\\" x-type=\\"link_title\\" x-begin=\\"](index-mini.md &quot;\\" x-end=\\"&quot;\\">Title <x equiv-text=\\"{{product-name-short.station-mini-old}}\\" id=\\"e4\\" x-type=\\"liquid_variable\\" />. And what?</g></g></source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles link with image with variables in title 2`] = `"%%%1%%%"`;

exports[`integration handles link with image with variables in title 3`] = `
Object {
  "document": "[![Image](index-mini.md \\"Title {{product-name-short.station-mini-old}}. And what?\\" x100)](index-mini.md \\"Title {{product-name-short.station-mini-old}}. And what?\\")",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "[![Image](index-mini.md \\"Title {{product-name-short.station-mini-old}}. And what?\\" x100)](index-mini.md \\"Title {{product-name-short.station-mini-old}}. And what?\\")",
  },
}
`;

exports[`integration handles link with variables in title 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\"><g equiv-text=\\"[{{text}})\\" id=\\"e1\\" ctype=\\"link\\" x-type=\\"link\\" x-begin=\\"[\\" x-end=\\")\\">Link<g equiv-text=\\"](index-mini.md &quot;{{text}}&quot;\\" id=\\"e2\\" x-type=\\"link_title\\" x-begin=\\"](index-mini.md &quot;\\" x-end=\\"&quot;\\">Title <x equiv-text=\\"{{product-name-short.station-mini-old}}\\" id=\\"e3\\" x-type=\\"liquid_variable\\" />. And what?</g></g></source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles link with variables in title 2`] = `"%%%1%%%"`;

exports[`integration handles link with variables in title 3`] = `
Object {
  "document": "[Link](index-mini.md \\"Title {{product-name-short.station-mini-old}}. And what?\\")",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "[Link](index-mini.md \\"Title {{product-name-short.station-mini-old}}. And what?\\")",
  },
}
`;

exports[`integration handles links in brackets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\">(see <g equiv-text=\\"[{{text}}](#nestedblock--timeouts)\\" id=\\"e1\\" ctype=\\"link\\" x-type=\\"link\\" x-begin=\\"[\\" x-end=\\"](#nestedblock--timeouts)\\">below for nested schema</g>)</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles links in brackets 2`] = `"%%%1%%%"`;

exports[`integration handles links in brackets 3`] = `
Object {
  "document": "(see [below for nested schema](#nestedblock--timeouts))",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "(see [below for nested schema](#nestedblock--timeouts))",
  },
}
`;

exports[`integration handles links with brackets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\"><g equiv-text=\\"[{{text}}](#example)\\" id=\\"e1\\" ctype=\\"link\\" x-type=\\"link\\" x-begin=\\"[\\" x-end=\\"](#example)\\"><g equiv-text=\\"^{{text}}^\\" id=\\"e2\\" x-type=\\"sup\\" x-begin=\\"^\\" x-end=\\"^\\">\\\\[Упр\\\\]</g></g></source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles links with brackets 2`] = `"%%%1%%%"`;

exports[`integration handles links with brackets 3`] = `
Object {
  "document": "[^\\\\[Упр\\\\]^](#example)",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "[^\\\\[Упр\\\\]^](#example)",
  },
}
`;

exports[`integration handles multiline inline code 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles multiline inline code 2`] = `
"\`ALL_CONCAT( expression [ , separator ]
    [ FIXED ... | INCLUDE ... | EXCLUDE ... ]
    [ BEFORE FILTER BY ... ]
)\`"
`;

exports[`integration handles self closing html tags 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\">Header</source>
            </trans-unit>
            <trans-unit id=\\"2_s-1\\">
                <source xml:space=\\"preserve\\">A a.</source>
            </trans-unit>
            <trans-unit id=\\"3_s-3\\">
                <source xml:space=\\"preserve\\">B b.</source>
            </trans-unit>
            <trans-unit id=\\"4\\">
                <source xml:space=\\"preserve\\">End of text</source>
            </trans-unit>
            <trans-unit id=\\"5\\">
                <source xml:space=\\"preserve\\">C!</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles self closing html tags 2`] = `
"# %%%1%%%

%%%2_s-1%%%
%%%3_s-3%%%

<keyword keyref=\\"responce\\"/>

## %%%4%%%

%%%5%%%"
`;

exports[`integration handles self closing html tags 3`] = `
Object {
  "document": "# Header

A a.
B b.

<keyword keyref=\\"responce\\"/>

## End of text

C!",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "Header",
    "2_s-1": "A a.",
    "3_s-3": "B b.",
    "4": "End of text",
    "5": "C!",
  },
}
`;

exports[`integration handles single variable as content 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles single variable as content 2`] = `
"#|
||

{{ reference-alerts.struct-table-protocol-alerts.request-id-col-1 }}

||
|#"
`;

exports[`integration handles terms 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\">Some <g equiv-text=\\"[{{text}}](*term)\\" id=\\"e1\\" x-type=\\"term_link\\" x-begin=\\"[\\" x-end=\\"](*term)\\">term</g></source>
            </trans-unit>
            <trans-unit id=\\"2_s-1\\">
                <source xml:space=\\"preserve\\">Some multiline term.</source>
            </trans-unit>
            <trans-unit id=\\"3_s-3\\">
                <source xml:space=\\"preserve\\">Here.</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles terms 2`] = `
"%%%1%%%

[*term]: %%%2_s-1%%%
%%%3_s-3%%%"
`;

exports[`integration handles terms 3`] = `
Object {
  "document": "Some [term](*term)

[*term]: Some multiline term.
Here.",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "Some [term](*term)",
    "2_s-1": "Some multiline term.",
    "3_s-3": "Here.",
  },
}
`;

exports[`integration handles titleless notes 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\">Для работы в режиме совместимости с Amazon DynamoDB используйте бессерверную (Serverless) конфигурацию БД.</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles titleless notes 2`] = `
"{% note info %}

%%%1%%%

{% endnote %}"
`;

exports[`integration handles titleless notes 3`] = `
Object {
  "document": "{% note info %}

Для работы в режиме совместимости с Amazon DynamoDB используйте бессерверную (Serverless) конфигурацию БД.

{% endnote %}",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "Для работы в режиме совместимости с Amazon DynamoDB используйте бессерверную (Serverless) конфигурацию БД.",
  },
}
`;

exports[`integration handles wrond ordered terms 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\">Some <g equiv-text=\\"[{{text}}](*term)\\" id=\\"e1\\" x-type=\\"term_link\\" x-begin=\\"[\\" x-end=\\"](*term)\\">term</g></source>
            </trans-unit>
            <trans-unit id=\\"2_s-1\\">
                <source xml:space=\\"preserve\\">Some multiline term.</source>
            </trans-unit>
            <trans-unit id=\\"3_s-3\\">
                <source xml:space=\\"preserve\\">Here.</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration handles wrond ordered terms 2`] = `
"%%%1%%%

[*term]: 
    %%%2_s-1%%%
    %%%3_s-3%%%"
`;

exports[`integration handles wrond ordered terms 3`] = `
Object {
  "document": "Some [term](*term)

[*term]: 
    Some multiline term.
    Here.",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "Some [term](*term)",
    "2_s-1": "Some multiline term.",
    "3_s-3": "Here.",
  },
}
`;

exports[`integration link variable leak 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\">Request</source>
            </trans-unit>
            <trans-unit id=\\"2\\">
                <source xml:space=\\"preserve\\"><g equiv-text=\\"**{{text}}**\\" id=\\"e1\\" ctype=\\"bold\\" x-type=\\"strong\\" x-begin=\\"**\\" x-end=\\"**\\">method</g></source>
            </trans-unit>
            <trans-unit id=\\"3\\">
                <source xml:space=\\"preserve\\"><g equiv-text=\\"**{{text}}**\\" id=\\"e1\\" ctype=\\"bold\\" x-type=\\"strong\\" x-begin=\\"**\\" x-end=\\"**\\">url</g></source>
            </trans-unit>
            <trans-unit id=\\"4\\">
                <source xml:space=\\"preserve\\">Path parameters</source>
            </trans-unit>
            <trans-unit id=\\"5\\">
                <source xml:space=\\"preserve\\"><g equiv-text=\\"**{{text}}**\\" id=\\"e1\\" ctype=\\"bold\\" x-type=\\"strong\\" x-begin=\\"**\\" x-end=\\"**\\">Name</g></source>
            </trans-unit>
            <trans-unit id=\\"6\\">
                <source xml:space=\\"preserve\\"><g equiv-text=\\"**{{text}}**\\" id=\\"e1\\" ctype=\\"bold\\" x-type=\\"strong\\" x-begin=\\"**\\" x-end=\\"**\\">Type</g></source>
            </trans-unit>
            <trans-unit id=\\"7\\">
                <source xml:space=\\"preserve\\"><g equiv-text=\\"**{{text}}**\\" id=\\"e1\\" ctype=\\"bold\\" x-type=\\"strong\\" x-begin=\\"**\\" x-end=\\"**\\">Description</g></source>
            </trans-unit>
            <trans-unit id=\\"8\\">
                <source xml:space=\\"preserve\\">businessId</source>
            </trans-unit>
            <trans-unit id=\\"9\\">
                <source xml:space=\\"preserve\\">integer&amp;lt;int64&amp;gt;</source>
            </trans-unit>
            <trans-unit id=\\"10\\">
                <source xml:space=\\"preserve\\">Description</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration link variable leak 2`] = `
"## %%%1%%%

#||| %%%2%%% | %%%3%%% ||

||
\`\`\`
POST
\`\`\`
| 
\`\`\`
https://api.example.ru/businesses/{businessId}/offer-mappings/update
\`\`\`
|||#

### %%%4%%%

#||| %%%5%%% | %%%6%%% | %%%7%%% ||

|| %%%8%%% | %%%9%%% | %%%10%%% |||#"
`;

exports[`integration link variable leak 3`] = `
Object {
  "document": "## Request

#||| **method** | **url** ||

||
\`\`\`
POST
\`\`\`
| 
\`\`\`
https://api.example.ru/businesses/{businessId}/offer-mappings/update
\`\`\`
|||#

### Path parameters

#||| **Name** | **Type** | **Description** ||

|| businessId | integer&lt;int64&gt; | Description |||#",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "Request",
    "10": "Description",
    "2": "**method**",
    "3": "**url**",
    "4": "Path parameters",
    "5": "**Name**",
    "6": "**Type**",
    "7": "**Description**",
    "8": "businessId",
    "9": "integer&lt;int64&gt;",
  },
}
`;

exports[`integration recursive merge tokens 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<xliff xmlns=\\"urn:oasis:names:tc:xliff:document:1.2\\" version=\\"1.2\\">
    <file original=\\"file.ext\\" source-language=\\"ru-RU\\" target-language=\\"en-US\\" datatype=\\"markdown\\">
        <header>
            <skeleton>
                <external-file href=\\"file.skl\\"></external-file>
            </skeleton>
        </header>
        <body>
            <trans-unit id=\\"1\\">
                <source xml:space=\\"preserve\\">Sentense <g equiv-text=\\"[{{text}})\\" id=\\"e1\\" ctype=\\"link\\" x-type=\\"link\\" x-begin=\\"[\\" x-end=\\")\\">link<g equiv-text=\\"](file.md &quot;{{text}}&quot;\\" id=\\"e2\\" x-type=\\"link_title\\" x-begin=\\"](file.md &quot;\\" x-end=\\"&quot;\\">title</g></g>.</source>
            </trans-unit>
        </body>
    </file>
</xliff>"
`;

exports[`integration recursive merge tokens 2`] = `"%%%1%%%"`;

exports[`integration recursive merge tokens 3`] = `
Object {
  "document": "Sentense [link](file.md \\"title\\").",
  "externalFile": "file.skl",
  "originalFile": "file.ext",
  "sourceLanguage": "ru-RU",
  "targetLanguage": "en-US",
  "variables": Object {
    "1": "Sentense [link](file.md \\"title\\").",
  },
}
`;
