// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders xliff to markdown parses inline code with liquid syntax wrapped in <x> tags 1`] = `
Array [
  "Sentence \`{{ ui-key.yacloud.common.label_tcp }} other\`.",
  "Another sentence \`{{user.name | capitalize}} other\`.",
]
`;

exports[`renders xliff to markdown renders autolink wrapped in <x> tags 1`] =
  `"Предложение номер один <https://www.google.com>."`;

exports[`renders xliff to markdown renders code wrapped in <x> tag 1`] = `
Array [
  "Предложение номер \`один\`.",
  "Предложение номер \`два\`.",
]
`;

exports[`renders xliff to markdown renders em wrapped in <x> tags 1`] = `
Array [
  "Предложение номер *один*.",
  "Предложение номер *два*.",
]
`;

exports[`renders xliff to markdown renders file wrapped in <x> tags 1`] =
  `"Sentence with {% src=\\"path/to/file\\" name=\\"readme.md\\" referrerpolicy=\\"no-referrer\\" rel=\\"noopener\\" target=\\"_blank\\" type=\\"text/plain\\" %}."`;

exports[`renders xliff to markdown renders heading with anchor wrapped in <x> tags 1`] =
  `"Heading with anchors"`;

exports[`renders xliff to markdown renders image with all attributes wrapped in <x> tags 1`] = `
Array [
  "hint",
  "Sentence ![image](image.png \\"%%%0%%%\\" =100x100).",
]
`;

exports[`renders xliff to markdown renders inline html wrapped in <x> tags 1`] =
  `"Sentence<br>with <b>html</b>."`;

exports[
  `renders xliff to markdown renders link containing multiple sentences wrapped in <x> tags 1`
] = `
Array [
  "Link title sentence one.",
  "Link title sentence two!",
  "Link text sentence one!",
  "Link text sentence Two?](file.md \\"%%%0%%% %%%1%%%\\").",
]
`;

exports[`renders xliff to markdown renders link with title wrapped in <x> tags 1`] = `
Array [
  "one",
  "Предложение номер [один](one.md \\"%%%0%%%\\").",
  "Предложение номер [два](two.md).",
]
`;

exports[`renders xliff to markdown renders liquid conditions wrapped in <x> tags 1`] =
  `"Sentence with {% if var == \\"val\\" %} val {% else %} other val {% endif %}."`;

exports[`renders xliff to markdown renders liquid filter wrapped in <x> tags 1`] =
  `"Sentence with filter {{ users | length }}."`;

exports[`renders xliff to markdown renders liquid function wrapped in <x> tags 1`] =
  `"Sentence with function {{ user.name.slice(1, 2) }}."`;

exports[`renders xliff to markdown renders liquid loop wrapped in <x> tags 1`] =
  `"Sentence {% for x in xs %} x {% endfor %}."`;

exports[`renders xliff to markdown renders liquid variables wrapped in <x> tags 1`] =
  `"Sentence with {{ variable }}."`;

exports[`renders xliff to markdown renders plain text 1`] = `
Array [
  "Sentence about something.",
  "Another sentence.",
]
`;

exports[`renders xliff to markdown renders ref link wrapped in <x> tags 1`] = `
Array [
  "one",
  "Предложение номер [[{#T}]](one.md \\"%%%0%%%\\").",
  "Предложение номер [[{#T}]](two.md).",
]
`;

exports[`renders xliff to markdown renders s wrapped in <x> tags 1`] = `
Array [
  "Предложение номер ~~один~~.",
  "Предложение номер ~~два~~.",
]
`;

exports[`renders xliff to markdown renders samp wrapped in <x> tags 1`] = `
Array [
  "Предложение номер ##один##.",
  "Предложение номер ##два##.",
]
`;

exports[`renders xliff to markdown renders strong wrapped in <x> tags 1`] = `
Array [
  "Предложение номер **один**.",
  "Предложение номер **два**.",
]
`;

exports[`renders xliff to markdown renders sup wrapped in <x> tags 1`] = `
Array [
  "Предложение номер ^один^.",
  "Предложение номер ^два^.",
]
`;

exports[`renders xliff to markdown renders variable href link wrapped in <x> tags 1`] = `
Array [
  "one",
  "Предложение номер [один]({{one}} \\"%%%0%%%\\").",
]
`;

exports[`renders xliff to markdown renders video wrapped in <x> tags 1`] = `"Another sentence"`;
